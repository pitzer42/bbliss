P2P Live Streaming using WebRTC

Create stream
  user accesses /create
  user provides title, location and grants access to media devices
  this information is sent to the server using websocket message "create"
  the server saves the title and keeps a list of peers available for connection
    (?)Most updated content => sort list by geographical distance from the source.
    (?)Lower latency => search the list for the closest peer
    Both strategies assumes that geographic distance correlates to distance in network hops

Watch stream
  client requests a list of active streams
  client picks a stream and access /:title
  using websocket message "connect" it tries to connect with an available peer
  a peer defines how many children it can support
    (?)Should it be re-inserted every time it connects to a child
    (?)Should it be inserted N times after it is connect to the tree?

Disconnect peer
  Handling only the ungraceful case





retry request_description
Front-end tests
better error handling. how to handle assynch errors


Links
http://muaz-khan.blogspot.com.br/2015/01/disable-ice-trickling.html
https://webrtc.org/start/

Books
https://www.amazon.com/WebRTC-Blueprints-Andrii-Sergiienko/dp/1783983108
shop.oreilly.com/product/0636920030911.do
https://www.amazon.com/Getting-Started-WebRTC-Rob-Manson/dp/1782166300
